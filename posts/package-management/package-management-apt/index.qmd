---
title: "apt"
date: "02/17/2024"
categories: [ "Package Management" ]
---
## Installing Packages with APT

The most common use of APT is installing software.  This is done using the `apt install` command followed by the package name. For example, to install the `vim` text editor:

```bash
sudo apt install vim
```

The `sudo` command is essential here, as installing software requires root privileges.  You'll be prompted for your password.  You can install multiple packages at once:

```bash
sudo apt install vim curl git
```

APT will automatically download and install the packages, along with any dependencies they require.


## Updating Package Lists

Before installing any new software, it's good practice to update your local package lists. These lists contain information about available packages and their versions from the repositories your system is configured to use.  This is done with:

```bash
sudo apt update
```

This command downloads the latest package information from the repositories, ensuring you're installing the most recent versions.


## Upgrading Packages

Once your package lists are updated, you can upgrade all installed packages to their latest versions using:

```bash
sudo apt upgrade
```

This command will identify any packages with newer versions available and prompt you for confirmation before upgrading.  Be aware that this might take some time depending on your internet connection and the number of packages to be upgraded.  For a full system upgrade including removing obsolete packages, use:

```bash
sudo apt full-upgrade
```


## Removing Packages

To remove a package, use the `apt remove` command:

```bash
sudo apt remove vim
```

This removes the specified package but leaves any configuration files intact. If you wish to completely remove the package and its configuration files, use:


```bash
sudo apt purge vim
```

## Searching for Packages

APT provides a convenient way to search for packages using the `apt search` command:

```bash
apt search firefox
```

This command searches for packages containing "firefox" in their name or description. You can refine your search using keywords and wildcards.


## Autoremove

After installing and uninstalling packages, you might have unused dependencies left on your system.  `apt autoremove` cleans these up:


```bash
sudo apt autoremove
```


## Autoclean

Old downloaded package files can consume considerable disk space. Use `apt autoclean` to remove them:

```bash
sudo apt autoclean
```


##  Listing Installed Packages

To see a list of all installed packages, use:

```bash
dpkg --get-selections | grep install
```

This uses `dpkg`, another package management utility often used in conjunction with APT.


## Using APT with Specific Repositories (Advanced)

APT allows you to manage different software repositories. Adding a new repository usually involves adding a line to your `/etc/apt/sources.list` file.  **However, this should be done cautiously and only after verifying the repository's legitimacy to avoid security risks.**  For example, to add a repository for a specific application, you might add a line similar to this (replace with the actual URL):

```
deb http://example.com/repo/ubuntu focal main
```

After adding a new repository, you must run `sudo apt update` to refresh the package list.  Then you can install packages from that repository.  This is an advanced technique, and exercising caution is strongly advised.




