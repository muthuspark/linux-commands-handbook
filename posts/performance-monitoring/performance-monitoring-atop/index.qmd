---
title: "atop"
date: "10/20/2024"
categories: [ "Performance Monitoring" ]
---
## What is atop?

`atop` is a powerful command-line utility for Linux systems that provides a detailed view of system performance over time. Unlike `top`, which only displays real-time data, `atop` logs system activity at regular intervals, allowing you to analyze historical performance trends. This is for identifying recurring issues or pinpointing the root cause of past performance problems. It collects a wide range of metrics, including CPU usage, memory usage, disk I/O, network traffic, and process activity.

## Installation

The installation process varies slightly depending on your distribution.  For Debian/Ubuntu based systems, use apt:

```bash
sudo apt update
sudo apt install atop
```

For Fedora/CentOS/RHEL, use yum or dnf:

```bash
sudo dnf install atop  # or sudo yum install atop
```

After installation, `atop` starts logging system activity automatically.


## Basic Usage and Output Interpretation

The core functionality of `atop` revolves around its ability to collect and display historical performance data.  To view the current system activity in a similar way to `top`, use:

```bash
atop
```

This command will present a real-time summary, updating every second.  Press `q` to exit.  However, the true power of `atop` lies in its ability to analyze past performance logs.  To view these logs, you need to specify the log file:

```bash
atop -r /var/log/atop/atop_20241027
```

Replace `/var/log/atop/atop_20241027` with the actual path to your `atop` log file.  The date in the filename corresponds to the date of the log. You'll find a detailed breakdown of CPU usage (per core), memory usage, disk I/O, network traffic, and a list of the most resource-intensive processes.

Understanding the output requires some familiarity with system performance metrics.  However, the column headers are usually self-explanatory. Key metrics to watch include:

* **CPU:** Percentage of CPU time used by different processes and system activities.
* **MEM:**  Amount of physical and virtual memory in use.
* **DISK:** Read and write operations to various disk devices.
* **NET:** Network traffic in and out.
* **PROCESSES:**  A list of running processes with their respective CPU and memory usage.


## Analyzing Specific Time Periods

`atop` allows granular control over the analysis of historical data.  To view data from a specific time period, use the `-b` (begin) and `-e` (end) options:

```bash
atop -r /var/log/atop/atop_20241027 -b 10:00:00 -e 11:00:00
```

This command displays the data from 10:00 AM to 11:00 AM on October 27th, 2024.


##  Focusing on Specific Processes

`atop`'s ability to filter data is important for troubleshooting. To focus on a specific process (e.g., `httpd`), use the `-p` option:

```bash
atop -r /var/log/atop/atop_20241027 -p httpd
```

This will filter the output to show only data related to the `httpd` process and its resources consumption.


##  Graphical Output with `atoptool`

While `atop` provides a text-based interface, the companion tool `atoptool` presents data graphically, making it easier to identify trends and anomalies.  Installation instructions vary depending on the distribution, usually through the same package manager as `atop`.  Once installed, you can use it like this:

```bash
atoptool -r /var/log/atop/atop_20241027
```


##  Configuration

The `atop` daemon runs continuously in the background, logging data to the specified location. You can configure the logging interval, log file size and other settings by modifying the `/etc/atop/atop.conf` file.  Refer to the `atop` man page (`man atop`) for detailed information on configuration options.



##  Advanced Usage

`atop` offers many other powerful features, such as:

* **Multiple Log File Analysis:**  Combine logs from multiple days for longer-term analysis.
* **Saving Output to a File:** Redirect the output to a file using `>`.
* **Data Aggregation:**  Summarize data across different time intervals.


This guide offers a starting point for utilizing `atop`'s powerful capabilities.  Experimentation and reviewing the `atop` man page are highly recommended for deeper understanding and more advanced usage.

